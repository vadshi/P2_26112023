
class Point:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        self.color = ...

    def distance(self, other_point) -> float:
        ...


# пример работы метода
p1 = Point(4, 4)
p2 = Point(3, 3)

result = p1.distance(p2)
print(result)


# Дан список точек нарисованных красным(red) и зеленым(green) цветами
# Точно известно, что точек каждого цвета ровно три,
# но порядок точек в списке произвольный
points = [
    Point(2, 7, "red"),
    Point(12, 7, "green"),
    Point(5, -2, "red"),
    Point(4, 8, "green"),
    Point(10, -2, "green"),
    Point(-12, 0, "red")
]
# Все точки одного цвета соединены линиями и образуют треугольник

# Задание-1: доработайте конструктор class Point для хранения цвета точки
# Задание-2: реализуйте метод distance()
# Задание-3: вычислите площади треугольников образованных из точек одного цвета(зеленый и красный)
# для вычисления площади можно использовать формулу Герона:
# math.sqrt(p * (p-a) * (p-b) * (p-c)), где p - это полупериметр

# TODO: your code here...

print("Площадь красного треугольника = ", ...)
print("Площадь зеленого треугольника = ", ...)
